version: '2'

networks:
  spark-intro-app-network:
    name: SparkIntroAppNetwork

services:
  spark-master:
    image: docker.io/bitnami/spark:3.5.1
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - spark-intro-app-network
    volumes:
      - ./imdb-app/target/scala-2.12/spark-imdb-app-assembly-0.0.1.jar:/opt/apps/imdb-app.jar
      - ./app-vol:/var/tmp/data
    # healthcheck:
    #   test: [ "CMD", "lsof", "-i:8080" ]
    #   interval: 5s
    #   timeout: 3s
    #   retries: 3

  spark-worker:
    image: docker.io/bitnami/spark:3.5.1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=4
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - spark-intro-app-network
    volumes:
      - ./imdb-app/target/scala-2.12/spark-imdb-app-assembly-0.0.1.jar:/opt/apps/imdb-app.jar
      - ./app-vol:/var/tmp/data

  spark-submit-imdb:
    build: imdb-app/.
    image: spark-submit-image:3.5.1-0
    depends_on:
      spark-master:
        condition: service_started
    networks:
      - spark-intro-app-network
    volumes:
     #- imdb-app/target/scala-2.12/spark-imdb-app-assembly-0.0.1.jar:/opt/apps/imdb-app.jar
      - ./app-vol:/var/tmp/data
    command: > 
      --verbose
      --conf spark.jars.ivy=/tmp/.ivy 
      --class ru.neoflex.imdbApp.SimpleApp
      --master spark://spark-master:7077 
      --deploy-mode cluster /opt/apps/imdb-app.jar
